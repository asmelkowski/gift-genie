/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/v1/auth/register": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Register User */
        post: operations["register_user_api_v1_auth_register_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Login User */
        post: operations["login_user_api_v1_auth_login_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/groups": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Groups */
        get: operations["list_groups_api_v1_groups_get"];
        put?: never;
        /** Create Group */
        post: operations["create_group_api_v1_groups_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/groups/{group_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Group Details */
        get: operations["get_group_details_api_v1_groups__group_id__get"];
        put?: never;
        post?: never;
        /** Delete Group */
        delete: operations["delete_group_api_v1_groups__group_id__delete"];
        options?: never;
        head?: never;
        /** Update Group */
        patch: operations["update_group_api_v1_groups__group_id__patch"];
        trace?: never;
    };
    "/api/v1/groups/{group_id}/members/{member_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Member */
        get: operations["get_member_api_v1_groups__group_id__members__member_id__get"];
        put?: never;
        post?: never;
        /** Delete Member */
        delete: operations["delete_member_api_v1_groups__group_id__members__member_id__delete"];
        options?: never;
        head?: never;
        /** Update Member */
        patch: operations["update_member_api_v1_groups__group_id__members__member_id__patch"];
        trace?: never;
    };
    "/api/v1/groups/{group_id}/members": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Members */
        get: operations["list_members_api_v1_groups__group_id__members_get"];
        put?: never;
        /** Create Member */
        post: operations["create_member_api_v1_groups__group_id__members_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/groups/{group_id}/exclusions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Exclusions */
        get: operations["list_exclusions_api_v1_groups__group_id__exclusions_get"];
        put?: never;
        /** Create Exclusion */
        post: operations["create_exclusion_api_v1_groups__group_id__exclusions_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/groups/{group_id}/exclusions/bulk": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Exclusions Bulk */
        post: operations["create_exclusions_bulk_api_v1_groups__group_id__exclusions_bulk_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/groups/{group_id}/exclusions/{exclusion_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Delete Exclusion */
        delete: operations["delete_exclusion_api_v1_groups__group_id__exclusions__exclusion_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/groups/{group_id}/draws": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Draws */
        get: operations["list_draws_api_v1_groups__group_id__draws_get"];
        put?: never;
        /** Create Draw */
        post: operations["create_draw_api_v1_groups__group_id__draws_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/draws/{draw_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Draw */
        get: operations["get_draw_api_v1_draws__draw_id__get"];
        put?: never;
        post?: never;
        /** Delete Draw */
        delete: operations["delete_draw_api_v1_draws__draw_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/draws/{draw_id}/execute": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Execute Draw */
        post: operations["execute_draw_api_v1_draws__draw_id__execute_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/draws/{draw_id}/finalize": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Finalize Draw */
        post: operations["finalize_draw_api_v1_draws__draw_id__finalize_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/draws/{draw_id}/notify": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Notify Draw */
        post: operations["notify_draw_api_v1_draws__draw_id__notify_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/draws/{draw_id}/assignments": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Assignments */
        get: operations["list_assignments_api_v1_draws__draw_id__assignments_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/health": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Health */
        get: operations["health_health_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** AssignmentResponse */
        AssignmentResponse: {
            /** Id */
            id: string;
            /** Draw Id */
            draw_id: string;
            /** Giver Member Id */
            giver_member_id: string;
            /** Receiver Member Id */
            receiver_member_id: string;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /** Giver Name */
            giver_name?: string | null;
            /** Receiver Name */
            receiver_name?: string | null;
        };
        /** AssignmentSummary */
        AssignmentSummary: {
            /** Giver Member Id */
            giver_member_id: string;
            /** Receiver Member Id */
            receiver_member_id: string;
        };
        /** CreateExclusionRequest */
        CreateExclusionRequest: {
            /** Giver Member Id */
            giver_member_id: string;
            /** Receiver Member Id */
            receiver_member_id: string;
            /**
             * Is Mutual
             * @default false
             */
            is_mutual: boolean;
        };
        /** CreateExclusionResponse */
        CreateExclusionResponse: {
            /** Created */
            created: components["schemas"]["ExclusionResponse"][];
            /** Mutual */
            mutual: boolean;
        };
        /** CreateExclusionsBulkRequest */
        CreateExclusionsBulkRequest: {
            /** Items */
            items: components["schemas"]["ExclusionItemRequest"][];
        };
        /** CreateExclusionsBulkResponse */
        CreateExclusionsBulkResponse: {
            /** Created */
            created: components["schemas"]["ExclusionResponse"][];
        };
        /** CreateGroupRequest */
        CreateGroupRequest: {
            /** Name */
            name: string;
            /** Historical Exclusions Enabled */
            historical_exclusions_enabled?: boolean | null;
            /** Historical Exclusions Lookback */
            historical_exclusions_lookback?: number | null;
        };
        /** CreateMemberRequest */
        CreateMemberRequest: {
            /** Name */
            name: string;
            /** Email */
            email?: string | null;
            /** Is Active */
            is_active?: boolean | null;
        };
        /** DrawResponse */
        DrawResponse: {
            /** Id */
            id: string;
            /** Group Id */
            group_id: string;
            /** Status */
            status: string;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /** Finalized At */
            finalized_at: string | null;
            /** Notification Sent At */
            notification_sent_at: string | null;
        };
        /** ExclusionItemRequest */
        ExclusionItemRequest: {
            /** Giver Member Id */
            giver_member_id: string;
            /** Receiver Member Id */
            receiver_member_id: string;
            /**
             * Is Mutual
             * @default false
             */
            is_mutual: boolean;
        };
        /** ExclusionResponse */
        ExclusionResponse: {
            /** Id */
            id: string;
            /** Group Id */
            group_id: string;
            /** Giver Member Id */
            giver_member_id: string;
            /** Receiver Member Id */
            receiver_member_id: string;
            /** Exclusion Type */
            exclusion_type: string;
            /** Is Mutual */
            is_mutual: boolean;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /** Created By User Id */
            created_by_user_id: string | null;
        };
        /**
         * ExclusionType
         * @enum {string}
         */
        ExclusionType: "manual" | "historical";
        /** ExecuteDrawResponse */
        ExecuteDrawResponse: {
            draw: components["schemas"]["DrawResponse"];
            /** Assignments */
            assignments: components["schemas"]["AssignmentSummary"][];
        };
        /** GroupDetailResponse */
        GroupDetailResponse: {
            /** Id */
            id: string;
            /** Name */
            name: string;
            /** Admin User Id */
            admin_user_id: string;
            /** Historical Exclusions Enabled */
            historical_exclusions_enabled: boolean;
            /** Historical Exclusions Lookback */
            historical_exclusions_lookback: number;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /**
             * Updated At
             * Format: date-time
             */
            updated_at: string;
        };
        /** GroupDetailWithStatsResponse */
        GroupDetailWithStatsResponse: {
            /** Id */
            id: string;
            /** Name */
            name: string;
            /** Admin User Id */
            admin_user_id: string;
            /** Historical Exclusions Enabled */
            historical_exclusions_enabled: boolean;
            /** Historical Exclusions Lookback */
            historical_exclusions_lookback: number;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /**
             * Updated At
             * Format: date-time
             */
            updated_at: string;
            stats: components["schemas"]["GroupStats"];
        };
        /** GroupStats */
        GroupStats: {
            /** Member Count */
            member_count: number;
            /** Active Member Count */
            active_member_count: number;
        };
        /** GroupSummary */
        GroupSummary: {
            /** Id */
            id: string;
            /** Name */
            name: string;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /** Historical Exclusions Enabled */
            historical_exclusions_enabled: boolean;
            /** Historical Exclusions Lookback */
            historical_exclusions_lookback: number;
        };
        /** GroupUpdateResponse */
        GroupUpdateResponse: {
            /** Id */
            id: string;
            /** Name */
            name: string;
            /** Historical Exclusions Enabled */
            historical_exclusions_enabled: boolean;
            /** Historical Exclusions Lookback */
            historical_exclusions_lookback: number;
            /**
             * Updated At
             * Format: date-time
             */
            updated_at: string;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** HealthResponse */
        HealthResponse: {
            /**
             * Status
             * @enum {string}
             */
            status: "healthy" | "unhealthy";
        };
        /** ListAssignmentsResponse */
        ListAssignmentsResponse: {
            /** Data */
            data: components["schemas"]["AssignmentResponse"][];
            /** Meta */
            meta: {
                [key: string]: unknown;
            };
        };
        /** LoginRequest */
        LoginRequest: {
            /**
             * Email
             * Format: email
             */
            email: string;
            /** Password */
            password: string;
        };
        /** LoginResponse */
        LoginResponse: {
            user: components["schemas"]["UserProfile"];
            /**
             * Token Type
             * @default Bearer
             */
            token_type: string;
        };
        /** MemberResponse */
        MemberResponse: {
            /** Id */
            id: string;
            /** Group Id */
            group_id: string;
            /** Name */
            name: string;
            /** Email */
            email: string | null;
            /** Is Active */
            is_active: boolean;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
        };
        /** NotifyDrawRequest */
        NotifyDrawRequest: {
            /**
             * Resend
             * @default false
             */
            resend: boolean;
        };
        /** NotifyDrawResponse */
        NotifyDrawResponse: {
            /** Sent */
            sent: number;
            /** Skipped */
            skipped: number;
        };
        /** PaginatedDrawsResponse */
        PaginatedDrawsResponse: {
            /** Data */
            data: components["schemas"]["DrawResponse"][];
            meta: components["schemas"]["PaginationMeta"];
        };
        /** PaginatedExclusionsResponse */
        PaginatedExclusionsResponse: {
            /** Data */
            data: components["schemas"]["ExclusionResponse"][];
            meta: components["schemas"]["PaginationMeta"];
        };
        /** PaginatedGroupsResponse */
        PaginatedGroupsResponse: {
            /** Data */
            data: components["schemas"]["GroupSummary"][];
            meta: components["schemas"]["PaginationMeta"];
        };
        /** PaginatedMembersResponse */
        PaginatedMembersResponse: {
            /** Data */
            data: components["schemas"]["MemberResponse"][];
            meta: components["schemas"]["PaginationMeta"];
        };
        /** PaginationMeta */
        PaginationMeta: {
            /** Total */
            total: number;
            /** Page */
            page: number;
            /** Page Size */
            page_size: number;
            /** Total Pages */
            total_pages: number;
        };
        /** RegisterRequest */
        RegisterRequest: {
            /**
             * Email
             * Format: email
             */
            email: string;
            /** Password */
            password: string;
            /** Name */
            name: string;
        };
        /** UpdateGroupRequest */
        UpdateGroupRequest: {
            /** Name */
            name?: string | null;
            /** Historical Exclusions Enabled */
            historical_exclusions_enabled?: boolean | null;
            /** Historical Exclusions Lookback */
            historical_exclusions_lookback?: number | null;
        };
        /** UpdateMemberRequest */
        UpdateMemberRequest: {
            /** Name */
            name?: string | null;
            /** Email */
            email?: string | null;
            /** Is Active */
            is_active?: boolean | null;
        };
        /** UserCreatedResponse */
        UserCreatedResponse: {
            /** Id */
            id: string;
            /**
             * Email
             * Format: email
             */
            email: string;
            /** Name */
            name: string;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
        };
        /** UserProfile */
        UserProfile: {
            /** Id */
            id: string;
            /** Email */
            email: string;
            /** Name */
            name: string;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    register_user_api_v1_auth_register_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RegisterRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserCreatedResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    login_user_api_v1_auth_login_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LoginRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LoginResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_groups_api_v1_groups_get: {
        parameters: {
            query?: {
                search?: string | null;
                page?: number;
                page_size?: number;
                sort?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedGroupsResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_group_api_v1_groups_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateGroupRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GroupDetailResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_group_details_api_v1_groups__group_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Group UUID */
                group_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GroupDetailWithStatsResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_group_api_v1_groups__group_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Group UUID */
                group_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_group_api_v1_groups__group_id__patch: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Group UUID */
                group_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateGroupRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GroupUpdateResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_member_api_v1_groups__group_id__members__member_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Group UUID */
                group_id: string;
                /** @description Member UUID */
                member_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MemberResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_member_api_v1_groups__group_id__members__member_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Group UUID */
                group_id: string;
                /** @description Member UUID */
                member_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_member_api_v1_groups__group_id__members__member_id__patch: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Group UUID */
                group_id: string;
                /** @description Member UUID */
                member_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateMemberRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MemberResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_members_api_v1_groups__group_id__members_get: {
        parameters: {
            query?: {
                is_active?: boolean | null;
                search?: string | null;
                page?: number;
                page_size?: number;
                sort?: string;
            };
            header?: never;
            path: {
                /** @description Group UUID */
                group_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedMembersResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_member_api_v1_groups__group_id__members_post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Group UUID */
                group_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateMemberRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MemberResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_exclusions_api_v1_groups__group_id__exclusions_get: {
        parameters: {
            query?: {
                type?: components["schemas"]["ExclusionType"] | null;
                giver_member_id?: string | null;
                receiver_member_id?: string | null;
                page?: number;
                page_size?: number;
                sort?: string;
            };
            header?: never;
            path: {
                /** @description Group UUID */
                group_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedExclusionsResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_exclusion_api_v1_groups__group_id__exclusions_post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Group UUID */
                group_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateExclusionRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CreateExclusionResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_exclusions_bulk_api_v1_groups__group_id__exclusions_bulk_post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Group UUID */
                group_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateExclusionsBulkRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CreateExclusionsBulkResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_exclusion_api_v1_groups__group_id__exclusions__exclusion_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Group UUID */
                group_id: string;
                /** @description Exclusion UUID */
                exclusion_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_draws_api_v1_groups__group_id__draws_get: {
        parameters: {
            query?: {
                status?: ("pending" | "finalized") | null;
                page?: number;
                page_size?: number;
                sort?: string;
            };
            header?: never;
            path: {
                /** @description Group UUID */
                group_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedDrawsResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_draw_api_v1_groups__group_id__draws_post: {
        parameters: {
            query?: {
                seed?: string | null;
            };
            header?: never;
            path: {
                /** @description Group UUID */
                group_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DrawResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_draw_api_v1_draws__draw_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Draw UUID */
                draw_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DrawResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_draw_api_v1_draws__draw_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Draw UUID */
                draw_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    execute_draw_api_v1_draws__draw_id__execute_post: {
        parameters: {
            query?: {
                seed?: string | null;
            };
            header?: never;
            path: {
                /** @description Draw UUID */
                draw_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ExecuteDrawResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    finalize_draw_api_v1_draws__draw_id__finalize_post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Draw UUID */
                draw_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DrawResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    notify_draw_api_v1_draws__draw_id__notify_post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Draw UUID */
                draw_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["NotifyDrawRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NotifyDrawResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_assignments_api_v1_draws__draw_id__assignments_get: {
        parameters: {
            query?: {
                /** @description Include member names */
                include?: "names" | "none";
            };
            header?: never;
            path: {
                /** @description Draw UUID */
                draw_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ListAssignmentsResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    health_health_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HealthResponse"];
                };
            };
        };
    };
}
